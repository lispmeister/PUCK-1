
user zen;

# misc jinxy stuff
pid                     /etc/d3ck/logs/nginx.pid;
worker_processes        1;
working_directory       /etc/d3ck;
events { 
    worker_connections  1024; 
}

#
# where the rubber meets the road
#
http {

    server {

        #
        # basix
        #
        listen                      *:8080;
        ssl                         on;
        server_name                 d3ck;

        # xxx - todo - drag this in from other confs
        client_max_body_size 1024M;

        #
        # logs
        #
        access_log                  /etc/d3ck/logs/proxy-access.log;
        error_log                   /etc/d3ck/logs/proxy-error.log debug;

        #
        # certs
        #
        ssl_certificate             /etc/d3ck/d3cks/D3CK/d3ck.crt;
        ssl_certificate_key         /etc/d3ck/d3cks/D3CK/d3ck.key;
        ssl_client_certificate      /etc/d3ck/d3cks/D3CK/ca.crt;

        #
        # ssl options and stuff
        #

        # ok if you have a cert, but it'd better be right if so
        ssl_verify_client           optional;

        ssl_session_timeout         5m;

        ssl_prefer_server_ciphers   On;
        ssl_protocols               SSLv3 TLSv1 TLSv1.1 TLSv1.2;

        ssl_ciphers                 ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

        keepalive_timeout           60;

        # is this right... for my self-signed cert stuff...?
        # ssl_verify_depth 2;

        ### Set headers to help out nodey
        proxy_set_header            X-SSL-Client-Verify $ssl_client_verify;
        proxy_set_header            X-SSL-Client-S-DN   $ssl_client_s_dn;

        proxy_set_header            Accept-Encoding     "";
        proxy_set_header            Host                $host;
        proxy_set_header            X-Real-IP           $remote_addr;
        proxy_set_header            X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Proto   $scheme;

        add_header                  Front-End-Https     on;


        #
        # websockets
        #
        location /socket.io {   

            # sockety stuff
            proxy_pass              http://10.42.29.1:5555;
            proxy_http_version      1.1;
            proxy_redirect          off;

            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "upgrade";

        }

        #
        # normal web stuff
        #
        location / {

            root                    /etc/d3ck;
            proxy_pass              http://localhost:5555;
            proxy_redirect          off;

            # proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        }

    }

}
