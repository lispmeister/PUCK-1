#!/bin/bash

#
#   A haiku to openssl:
#
#       openssl
#       a black crane over the lake
#       may you rot in hell
#

. /etc/puck/config.sh

if [ "X$1" = "X" ]; then
    echo Usage: $0 name
    exit 1
else
    clientname="$1"
fi

vpn_home="/etc/puck/pucks/vpn_client"
vtarget="$vpn_home/$clientname"

cd /etc/puck/f-u-openssl

. puck-vars

# client

echo COMMON NAME IS: "$KEY_CN"

echo $vtarget

openssl req -nodes -batch -new -newkey rsa:$KEY_SIZE -keyout "$vtarget.key" -out "$vtarget.csr" -config stupid.cnf
openssl ca -cert ca.crt $magic -batch -keyfile ca.key -days $puck_vpn_life_tmp -out "$vtarget.crt" -in "$vtarget.csr" -config stupid.cnf

cd $vpn_home

# hmmm... id?
# openssl x509 -noout -fingerprint -in $vpn_home/$clientname.crt | awk -F= '{print $2}' | sed 's/://g' | tee -a $vpn_home/$clientname.pid

# get IP's of server
remote=$(ifconfig | awk '{if (n) { all[dev] = substr($2, match($2, ":") + 1); n = 0 }} {if (match($0, "^[^ \t]") && $1 != "lo" && !match($1, "^tun")) { n = 1; dev = $1; all[dev]="" }} END { for (i in all) print "remote", all[i]}'| sed 's/,]$/]/')

echo
echo generating p12:
echo
echo "    $vtarget.p12"
echo
echo You will need to securely mail or get to your client and install it.
echo "The password (required by Apple's IOS, at least) is 'PUCK' (without quotes!)"
echo

openssl pkcs12 -password pass:PUCK -export -in $vtarget.crt -inkey $vtarget.key -certfile $hell/ca.crt -name $clientname -out $vtarget.p12

echo
echo now generating openvpn configuration file
echo
echo "    $vtarget.ovpn"
echo
echo You will need to securely transfer it to your client and install it as well
echo

(cat << EOV
#
# OpenVPN client conf, generated by PUCK
#
client
dev tun

proto $puck_vpn_proto
port  $puck_vpn_port
$remote

# seems recommended...?!?
# link-mtu 1500
tun-mtu  1500

cipher $puck_cipher
auth $puck_auth

resolv-retry infinite

comp-lzo
nobind
persist-key
persist-tun
verb 3

remote-cert-tls server
redirect-gateway

EOV

echo "<ca>"
cat /etc/puck/pucks/PUCK/ca.crt
echo "</ca>"
echo
echo "<cert>"
cat $vtarget.crt
echo "</cert>"
echo
echo "<key>"
cat $vtarget.key
echo "</key>"
echo
echo "<tls-auth>"
cat /etc/puck/pucks/PUCK/ta.key
echo "</tls-auth>"
) > $vtarget.ovpn

