#!/bin/bash -x

#
# Starts up the PUCK programs... openvpn, yate, and the node app
#
# Will create a default PUCK if none are present
#

echo starting PUCK server...

. /etc/puck/config.sh

cd $PUCK_HOME

# nuke any past status
echo '{"events":{"new_puck":""},"openvpn_server":{"vpn_status":"down","start":"n/a","start_s":"n/a","duration":"unknown","stop":"unknown","stop_s":"unknown", "client": "unknown", "client_pid":"unknown"},"openvpn_client":{"vpn_status":"down","start":"n/a","start_s":"n/a","duration":"unknown","stop":"unknown","stop_s":"unknown"}, "browser_events":{"127.0.0.1" :{ "notify_add":false, "notify_ring":false, "notify_file":false}}, "file_events": { "file_name" : "", "file_size" : "", "file_from" : ""}}' > $PUCK_HOME/status.puck

# clear server and client logs
echo > $PUCK_LOGS/client_vpn.log
echo > $PUCK_LOGS/server_vpn.log

# wipe out command logs
rm -f $PUCK_LOGS/*.err
rm -f $PUCK_LOGS/*.out

# if no dir or symlink
if [ ! -d $puck_keystore -o ! -h $puck_keystore ] ; then
    cd $hell
    ./rot-in-hell.sh

    cd ..

    mkdir $puck_keystore
    mkdir $keystore/vpn_client

    cp $hell/ca* $hell/puck* $puck_keystore

    ln -s $puck_keystore/ca.crt $puck_keystore/puckroot.crt

    cp $hell/vpn* $keystore/vpn_client

    # print SHA1 fingerprint
    openssl x509 -noout -fingerprint -in $puck_keystore/puck.crt | awk -F= '{print $2}' | sed 's/://g' | tee -a $puck_keystore/puck.pid

    pid=`cat $puck_keystore/puck.pid`
    cp $puck_keystore/puck.pid $PUCK_HOME/public/puck.pid

    # DHM key
    ./create_tlsauth.sh $pid

    # xxx - give all clients the same TA key?  No!

    ./create_dhm.sh

    mv $puck_keystore/* $keystore/$pid
    rmdir $puck_keystore
    ln -s $keystore/$pid $puck_keystore

    # current eth0 ip addr
    ip=$(ifconfig eth0 | awk '/inet/ {split($2, ip, ":"); print ip[2]}')

    # need to start this before we try a REST call to it....

#   NODE_PATH="/etc/puck/" node main.js &
    NODE_PATH="$PUCK_HOME/" node main.js &

    # XXX - make REST pings or something every sec until an answer, but for now...
    sleep 15

    ./exe/create_puck.sh $pid img/puck.png $ip "$($PUCK_HOME/exe/get_net.sh)" Ms.PUCK puck@example.com

else
    cp $puck_keystore/puck.pid $PUCK_HOME/public/puck.pid

    # if not started above, do so now
#   NODE_PATH="/etc/puck/" node main.js &
    NODE_PATH="$PUCK_HOME/" node main.js &

fi

# for testing only... get something in the 10.x.y/24 zone
x=$((RANDOM%254+1))
y=$((RANDOM%254+1))

base10="10.$x.$y"

#
# why in the name of holy fuck does openvpn require a /29 or bigger?
# Did /31 kill their dog or something?  There must be a reason... somewhere...
#
mask10="255.255.255.248"

cd $PUCK_HOME

openvpn --server $base10.0 $mask10 --config S.conf &

echo "$base10.1" > $PUCK_HOME/public/openvpn_server.ip

yate -c $PUCK_HOME/yate/ -vvvvv -d -l $PUCK_HOME/log/yate.log -Dt

exit 0

